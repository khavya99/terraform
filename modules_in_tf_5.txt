Module is a container for multiple resources that are used together.
****** They r used to package and reuse resource cofigs through out terraform code ****** 
Every tf configuration has atleast one module called root mudule, which contains code files in main working directory

Modules can be downloaded and referenced from:
    terraform public registry
    terraform private registry
    your local system

Modules are referenced using module block:

keyword      module-name
    module "my-vpc-module"{
        source = "./modules/vpc"  --> module source (mandatory)
        version = "0.0.5" --> module version
        resion = var.region  --> input parameters for module
    }

other allowed parameters: count, for_each, providers, depends_on

------------------------------------------------------------------------------------------------------------

Modules can optiononally take input and provide outputs to plug back into you rmain code
Accessing module outputs in code:
    resource "aws_instance" "aws-vpc-module"{
        subnet_id = module.my-vpc-module.subnet_id
    }

Module inputs are arbitarily named parameters that you pass inside module block
These inputs can be used as variables inside module code

module "my-vpc-module"{
    source = "./modules/vpc"
    server-name = "us-east-1"
}

In module we access server-name as : var.server-name

------------------------------------------------------------------------------------------------------------
Outputs declared inside terraform module code can be fed back into root module or ur main code

output invocation in terraform code:
module.<name-of-module>.<name-of-output>
------------------------------------------------------------------------------------------------------------

in ur module my-vpc-module:
output "ip_address" {
    value = aws_instance.private_ip
}

in ur main code:
module.my-vpc-module.ip_address


 

